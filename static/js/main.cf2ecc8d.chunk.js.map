{"version":3,"sources":["images/piechart1.png","images/image-ANIMATION.gif","images/tableData.png","images/JSONdata.png","StoryPanel.js","MapFunctions.js","stacked-bar.js","SimpleWebsite.js","index.js"],"names":["module","exports","StoryPanel","m_actionFilter","state","visible","id","props","anchorname","paragraphs","headerHandleChange","event","isIntersecting","activeID","console","log","typeContent","app","setActiveID","imgUrl","setState","res","i","this","length","push","content","text","code","imageClass","image","title","actionFilter","onChange","threshold","rootMargin","className","map","paragraph","key","filter","Component","StoryParagraph","m_firedAction","m_statusChanged","m_filterArray","paragraphChange","handleScroll","bind","window","removeEventListener","topOffset","ReactDOM","findDOMNode","getBoundingClientRect","top","bottomOffset","bottom","highlighted","action","objects","addEventListener","src","alt","codeSnippet","ReactHtmlParser","MapFunctions","m_filterStartYear","activeYear","m_filterEndYear","m_filterType","m_filterName","m_initiated","self","grump","m_colors","currentYear","rawtypes","types","getFuel","type","fuelDetail","roundToOne","capacity","Math","round","mapboxgl","accessToken","Map","container","style","zoom","center","on","addSource","data","tooltip","Marker","tooltipContainer","offset","setLngLat","addTo","e","features","properties","site","lngLat","getCanvas","cursor","testFunction","show","color","name","lowCarbon","operator","open","fuel","chp","render","React","createElement","PopupContent","unmountComponentAtNode","updateFilters","active","drawOnMap","isStyleLoaded","getLayer","removeLayer","circlecolor","colored","paint","differentSizes","property","base","stops","value","opacity","addLayer","source","document","init","o","yearOpen","plantColor","setTooltip","filtertype","setFilter","height","ref","el","mapContainer","Stackedbarchart","width","percentages","reverseStackOrder","dataKey","stackId","fill","layout","align","verticalAlign","iconType","PureComponent","jsfiddleUrl","SimpleWebsite","img1","gif2","ScrollyTeller","imagesOnsite","tableData","jsonData","updateDimensions","innerWidth","innerHeight","panelHeight","percentageCalcs","sections","activeId","activeTypeContent","panelChanged","updatePercentages","year","arr","yearPerc","obj","percentage","t","UNSAFE_componentWillMount","sectiondata","renderparagraphs","createPanelContent","section","helperArray","tempArr","j","data2","yearstart","yearStart","yearend","yearEnd","k","key2","num","allPanels","setDrawOnMap","drawOnMapi","imgUrlId","activeImageUrl","setActiveMulti","setActive","ttype","setActiveName","toggleActive","prevState","undefined","vfilter","result","feature","replace","url","actions","highlight","keywords","cap","mapdemo","imageId","lower","c","toUpperCase","sectionID","margin","ImageDisp","NavMenuItem","selector","alignToTop","getElementById"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,+oyhECKtBC,E,2MAEnBC,eAAiB,K,EACjBC,MAAQ,CACNC,SAAS,EACTC,GAAI,EAAKC,MAAMD,GACfE,WAAY,EAAKD,MAAMC,WACvBC,WAAY,I,EAGdC,mBAAqB,SAAAC,GAEfA,EAAMC,gBAAkB,EAAKL,MAAMD,KAAO,EAAKC,MAAMM,WACvDC,QAAQC,IAAI,EAAKR,MAAMS,aACvB,EAAKT,MAAMU,IAAIC,YAAY,EAAKX,MAAMD,GAAI,EAAKC,MAAMS,YAAa,EAAKT,MAAMY,SAG/E,EAAKC,SAAS,CACZf,QAAS,EAAKE,MAAMD,KAAO,EAAKC,MAAMM,Y,mFAOxC,IADA,IAAIQ,EAAM,GACDC,EAAI,EAAGA,EAAIC,KAAKhB,MAAME,WAAWe,OAAQF,IAChDD,EAAII,KACF,CAAE,KAAQF,KAAKhB,MAAME,WAAWa,GAAGf,MAAMmB,QAAQC,KAAM,KAAQJ,KAAKhB,MAAME,WAAWa,GAAGf,MAAMmB,QAAQE,KAAM,WAAcL,KAAKhB,MAAME,WAAWa,GAAGf,MAAMmB,QAAQG,WAAY,MAASN,KAAKhB,MAAME,WAAWa,GAAGf,MAAMmB,QAAQI,MAAO,MAASP,KAAKhB,MAAME,WAAWa,GAAGf,MAAMmB,QAAQK,MAAO,OAAUR,KAAKhB,MAAME,WAAWa,GAAGf,MAAMyB,eAKtUT,KAAKH,SAAS,CACZX,WAAYY,M,+BAIR,IAAD,OAEP,OACE,kBAAC,IAAD,CAAUY,SAAUV,KAAKb,mBACzBwB,UAAW,GACXC,WAAW,gBAEX,6BAAS7B,GAAI,WAAaiB,KAAKnB,MAAME,GAAI8B,UAAS,4BAAuBb,KAAKnB,MAAMC,SAAWkB,KAAKnB,MAAME,KAAOiB,KAAKhB,MAAMM,SAAW,cAAgB,kBAGnJ,wBAAIP,GAAIiB,KAAKhB,MAAMC,WAAY4B,UAAS,uBAA0Bb,KAAKhB,MAAMwB,OAG/E,yBAAKzB,GAAIiB,KAAKhB,MAAMC,WAAa,MAAO4B,UAAU,gBAC/Cb,KAAKnB,MAAMK,WAAW4B,KACrB,SAACC,EAAWhB,GAAZ,OACA,yBAAKiB,IAAKjB,GACR,kBAAC,EAAD,CACEiB,IAAK,EAAKnC,MAAMI,WAAa,QAAUc,EACvChB,GAAI,EAAKF,MAAMI,WAAa,QAAUc,EACtCS,MAAOO,EAAUP,MACjBO,UAAWA,EAAUX,KACrBC,KAAMU,EAAUV,KAChBE,MAAOQ,EAAUR,MACjBD,WAAYS,EAAUT,WACtBG,aAAcM,EAAUE,oB,GA9DAC,aA4ElCC,E,YAWJ,WAAYnC,GAAQ,IAAD,8BACjB,4CAAMA,KATRoC,eAAgB,EAQG,EAPnBC,iBAAkB,EAOC,EANnBC,cAAgB,CAAC,MAAO,IAML,EALnBzC,MAAQ,CACNE,GAAI,EAAKC,MAAMD,GACfD,SAAS,GAGQ,EAyEnByC,gBAAkB,SAAAnC,GAChB,EAAKS,SAAS,CACZf,QAASM,EAAMC,kBAzEjB,EAAKmC,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,oFAMjBC,OAAOC,oBAAoB,SAAU3B,KAAKwB,gB,mCAG/BpC,GAEX,GAAIY,KAAKnB,MAAMC,QAAS,CACtB,IAAI8C,EAAYC,IAASC,YAAY9B,MAAM+B,wBAAwBC,IAC/DC,EAAeJ,IAASC,YAAY9B,MAAM+B,wBAAwBG,OACjElC,KAAKoB,gBACJpB,KAAKnB,MAAMsD,aACTnC,KAAKhB,MAAMyB,cAEbT,KAAKhB,MAAMyB,aAAa2B,OAAOpC,KAAKhB,MAAMyB,aAAa4B,SAAS,GAIlErC,KAAKoB,eAAgB,GAEjBpB,KAAKhB,MAAMyB,eAEbT,KAAKhB,MAAMyB,aAAa2B,OAAO,MAAM,GAErCpC,KAAKoB,eAAgB,IAItBQ,EAAY,KAAOA,EAAY,KAASA,EAAY,KAAOA,EAAY,GAAKK,EAAe,IAEzFjC,KAAKnB,MAAMsD,cACdnC,KAAKH,SAAS,CACZsC,aAAa,IAEfnC,KAAKoB,eAAgB,GAMnBpB,KAAKnB,MAAMsD,cAEbnC,KAAKH,SAAS,CACZsC,aAAa,IAGfnC,KAAKoB,eAAgB,M,0CAQ3BM,OAAOY,iBAAiB,SAAUtC,KAAKwB,gB,+BAuBvC,OACE,kBAAC,IAAD,CACEd,SAAUV,KAAKuB,iBAEf,iCAAOvB,KAAKhB,MAAMwB,MAChB,4BAAKR,KAAKhB,MAAMwB,OAEhB,GACA,yBACEK,UAAS,qBAAgBb,KAAKnB,MAAMsD,YAAc,SAAW,IAC7DpD,GAAIiB,KAAKhB,MAAMD,IACdiB,KAAKhB,MAAMuB,MACV,yBAAKM,UAAWb,KAAKhB,MAAMsB,YACzB,yBAAKiC,IAAKvC,KAAKhB,MAAMuB,MAAOiC,IAAKxC,KAAKhB,MAAMuB,SAG9C,GACDP,KAAKhB,MAAMqB,KACV,6BACCL,KAAKhB,MAAMqB,KAAKS,KACf,SAAC2B,EAAY1D,GAAb,OACE,0BAAMiC,IAAKjC,EAAG8B,UAAU,eAAe6B,IAAgBD,QAIzD,GACJ,2BACGC,IAAgB1C,KAAKhB,MAAM+B,mB,GAvHbG,a,yBC7ERyB,E,2MAGjBC,kBAAoB,CAAC,KAAM,CAAC,SAAU,CAAC,MAAO,cAAe,EAAK5D,MAAM6D,Y,EACxEC,gBAAkB,CAAC,KAAM,CAAC,SAAU,CAAC,MAAO,YAAa,EAAK9D,MAAM6D,Y,EACpEE,aAAe,CAAC,KAAM,CAAC,SAAU,CAAC,MAAO,SAAU,e,EAEnDC,aAAe,CAAC,KAAM,CAAC,SAAU,CAAC,MAAO,SAAU,e,EAEnDC,aAAc,E,EACdnC,IAAM,K,EAENpB,IAAM,K,EAGNwD,KAAO,K,EACPC,MAAQ,K,EACRC,SAAW,CACP,KAAQ,UACR,QAAW,UACX,MAAS,UACT,QAAW,UACX,IAAO,UACP,MAAS,UACT,eAAgB,UAChB,KAAQ,UACR,QAAW,UACX,MAAS,UACT,IAAO,W,EAGXvE,MAAQ,CAEJwE,YAAa,EAAKrE,MAAM6D,WACxBS,SAAU,EAAKtE,MAAMuE,O,EAwOzBC,QAAU,SAACC,EAAMC,GACb,MAAmB,MAAfA,EACOD,EACS,SAATA,GAA4B,UAATA,EACnBC,EAEAD,EAAO,KAAOC,G,EAI7BC,WAAa,SAACC,GACV,QAASC,KAAKC,MAAMF,EAAW,OAAS,Q,sEA9OxC,IAAK5D,KAAKiD,YAAa,CACnBc,IAASC,YAAc,6FACvBhE,KAAKc,IAAM,IAAIiD,IAASE,IAAI,CACxBC,UAAW,MACXC,MAAO,oCACPC,KAAM,CAAC,GACPC,OAAQ,EAAE,EAAG,WAIjB,IAAInB,EAAOlD,KACXA,KAAKc,IAAIwD,GAAG,QAAQ,WAChBpB,EAAKpC,IAAIyD,UAAU,cAAe,CAAEd,KAAM,UAAWe,KAAMtB,EAAKlE,MAAMwF,OACtE,IAAMC,EAAU,IAAIV,IAASW,OAAO1E,KAAK2E,iBAAkB,CACvDC,OAAQ,EAAE,IAAK,KAChBC,UAAU,CAAC,EAAG,IAAIC,MAAM5B,EAAKpC,KAEhCoC,EAAKpC,IAAIwD,GAAG,aAAc,eAAe,SAAUS,GAE/CxF,QAAQC,IAAI,UAAYuF,EAAEC,SAAS,GAAGC,WAAWC,MACjDT,EAAQI,UAAUE,EAAEI,QACpBjC,EAAKC,MAAQ4B,EAAEC,SAAS,GACxB9B,EAAKpC,IAAIsE,YAAYjB,MAAMkB,OAAS,UACpCnC,EAAKoC,cAAa,MAItBpC,EAAKpC,IAAIwD,GAAG,YAAa,eAAe,SAAUS,GAC9CN,EAAQI,UAAUE,EAAEI,QACpBjC,EAAKC,MAAQ4B,EAAEC,SAAS,GACxB9B,EAAKpC,IAAIsE,YAAYjB,MAAMkB,OAAS,UACpCnC,EAAKoC,cAAa,MAItBpC,EAAKpC,IAAIwD,GAAG,aAAc,eAAe,SAAUS,GAE/C7B,EAAKpC,IAAIsE,YAAYjB,MAAMkB,OAAS,GACpCnC,EAAKoC,cAAa,MAGtBpC,EAAKpC,IAAIsE,YAAYjB,MAAMkB,OAAS,UACpCnC,EAAKD,aAAc,Q,iCAIpBsC,EAAMC,EAAOC,EAAM7B,EAAU8B,EAAWC,EAAUC,EAAMC,EAAMC,GACjEP,EAEA1D,IAASkE,OACLC,IAAMC,cACFC,EAAc,CACdV,QAAOC,OAAM7B,WAAU8B,YAAWC,WAAUC,OAAMC,OAAMC,QAG5D9F,KAAK2E,kBAIT9C,IAASsE,uBAAuBnG,KAAK2E,oB,2CAiBzC,GAVI3E,KAAKhB,MAAM6D,aAAe7C,KAAKnB,MAAMwE,cAErCrD,KAAKH,SAAS,CACVwD,YAAarD,KAAKhB,MAAM6D,aAG5B7C,KAAK4C,kBAAoB,CAAC,KAAM,CAAC,SAAU,CAAC,MAAO,cAAe5C,KAAKhB,MAAM6D,YAC7E7C,KAAK8C,gBAAkB,CAAC,KAAM,CAAC,SAAU,CAAC,MAAO,YAAa9C,KAAKhB,MAAM6D,YACzE7C,KAAKoG,iBAELpG,KAAKhB,MAAMuE,QAAUvD,KAAKnB,MAAMyE,SAAU,CAC1CtD,KAAK+C,aAAe,CAAC,OAErB,IAAK,IAAIhD,EAAI,EAAGA,EAAIC,KAAKhB,MAAMuE,MAAMtD,OAAQF,IACrCC,KAAKhB,MAAMuE,MAAMxD,GAAGsG,QACpBrG,KAAK+C,aAAa7C,KAAK,CAAC,KAAM,CAAC,MAAO,QAASF,KAAKhB,MAAMuE,MAAMxD,GAAG0D,OAG3EzD,KAAKH,SAAS,CAEVyD,SAAUtD,KAAKhB,MAAMuE,QAEzBvD,KAAKoG,gBAET,GAAIpG,KAAKhB,MAAMsH,WACPtG,KAAKc,IAAIyF,gBAAiB,CACtBvG,KAAKc,IAAI0F,SAAS,gBAClBxG,KAAKc,IAAI2F,YAAY,eAIzB,IAAIC,EAAc,GAKdA,EADA1G,KAAKhB,MAAMsH,UAAUK,QACP,CACV,QACA,CAAC,MAAO,QACR,OAAQ,UACR,UAAW,UACX,QAAS,UACT,UAAW,UACX,MAAO,UACP,QAAS,UACT,eAAgB,UAChB,OAAQ,UACR,UAAW,UACX,QAAS,UACT,MAAO,UACP,QAGU,OAiClB,IAAIC,EACJ,CACI,gBAhCA5G,KAAKhB,MAAMsH,UAAUO,eACN,CACXC,SAAU,WACVrD,KAAM,cACNsD,KAAM,EACNC,MAAO,CAEH,CAAC,CAAE5C,KAAM,EAAG6C,MAAO,KAAO,GAC1B,CAAC,CAAE7C,KAAM,EAAG6C,MAAO,MAAQ,GAC3B,CAAC,CAAE7C,KAAM,IAAK6C,MAAO,KAAO,GAC5B,CAAC,CAAE7C,KAAM,IAAK6C,MAAO,MAAQ,IAC7B,CAAC,CAAE7C,KAAM,EAAG6C,MAAO,KAAO,GAC1B,CAAC,CAAE7C,KAAM,EAAG6C,MAAO,MAAQ,IAC3B,CAAC,CAAE7C,KAAM,GAAI6C,MAAO,KAAO,GAC3B,CAAC,CAAE7C,KAAM,GAAI6C,MAAO,MAAQ,IAC5B,CAAC,CAAE7C,KAAM,GAAI6C,MAAO,KAAO,GAC3B,CAAC,CAAE7C,KAAM,GAAI6C,MAAO,MAAQ,MAKrB,EAYf,eAAgBP,EAChB,iBAVA1G,KAAKhB,MAAMsH,UAAUY,QACX,IAEA,GAUdlH,KAAKc,IAAIqG,SAAS,CACdpI,GAAI,cACJ0E,KAAM,SACN2D,OAAQ,cACRR,MAAOA,EACP,OAAU,CAAC,MAAO5G,KAAK4C,kBAAmB5C,KAAK8C,gBAAiB9C,KAAK+C,aAAc/C,KAAKgD,mB,0CAQpGhD,KAAK2E,iBAAmB0C,SAASpB,cAAc,OAC/CjG,KAAKsH,S,mCAEI/B,GAET,IAAIgC,EAAIvH,KAAKmD,MACTsC,EAAO8B,EAAEtC,WAAWC,KACpBtB,EAAW2D,EAAEtC,WAAWrB,SACxBH,EAAO8D,EAAEtC,WAAWxB,KACpBC,EAAa6D,EAAEtC,WAAWvB,WAC1BgC,EAAY6B,EAAEtC,WAAWS,UACzBC,EAAW4B,EAAEtC,WAAWU,SACxBG,EAAMyB,EAAEtC,WAAWa,IACnBF,EAAO2B,EAAEtC,WAAWuC,SACpBC,EAAazH,KAAKoD,SAASmE,EAAEtC,WAAWxB,MAE5CzD,KAAK0H,WAAWnC,EAAMkC,EAAYhC,EAAM7B,EAAU8B,EAAWC,EAAUC,EAAM5F,KAAKwD,QAAQC,EAAMC,GAAaoC,K,oCAcnG6B,GACN3H,KAAKc,IAAIyF,kBACTvG,KAAK+C,aAAe,CAAC,MAAO,CAAC,KAAM,CAAC,MAAO,QAAS4E,IACpD3H,KAAKoG,mB,oCAICX,GACNzF,KAAKc,IAAIyF,kBAELvG,KAAKgD,aADI,QAATyC,EACoB,CAAC,MAAO,CAAC,KAAM,CAAC,MAAO,QAASA,IAGhC,KAExBzF,KAAKoG,mB,sCAILpG,KAAKc,IAAIyF,iBAETvG,KAAKc,IAAI8G,UAAU,cAAe,CAAC,MAAO5H,KAAK4C,kBAAmB5C,KAAK8C,gBAAiB9C,KAAK+C,aAAc/C,KAAKgD,iB,+BAkB9G,IAAD,OACL,OAEI,yBAAKmB,MAAO,CAAE0D,OAAQ7H,KAAKhB,MAAM6I,QAAUC,IAAK,SAAAC,GAAE,OAAI,EAAKC,aAAeD,GAAIlH,UAAU,2BAA2B9B,GAAG,Y,GA3RxFmC,aAiSpCgF,EAAe,SAAC,GAAD,IAAGV,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAM7B,EAAhB,EAAgBA,SAAU8B,EAA1B,EAA0BA,UAAWC,EAArC,EAAqCA,SAAUC,EAA/C,EAA+CA,KAAMC,EAArD,EAAqDA,KAAMC,EAA3D,EAA2DA,IAA3D,OACjB,yBAAKjF,UAAS,uBACV,wBAAIA,UAAU,eAAesD,MAAO,CAAEqB,MAAOA,IAA7C,IAAwDC,GACxD,yBAAK5E,UAAU,YAAYsD,MAAO,CAAE,gBAAmBqB,IACnD,uBAAG3E,UAAU,UAAUgF,GACvB,2BAAG,0BAAMhF,UAAU,eAAhB,cAAgD+C,EAAS,0BAAM/C,UAAU,SAAhB,OAC5D,2BAAG,0BAAMA,UAAU,eAAhB,gBAAkD6E,GAAuB,MAARI,EAAc,2BAAG,0BAAMjF,UAAU,eAAhB,4BAA8DiF,GAAW,GAC9J,2BAAG,0BAAMjF,UAAU,eAAhB,cAAH,IAAoD8E,GACpD,2BAAG,0BAAM9E,UAAU,eAAhB,iBAAH,IAAuD+E,EAAvD,Q,kCCpSWqC,E,iLAKjB,OACG,6BACD,kBAAC,IAAD,CACEC,MAAOlI,KAAKhB,MAAMkJ,MAAM,GACxBL,OAAQ7H,KAAKhB,MAAM6I,OACnBrD,KAAMxE,KAAKhB,MAAMmJ,YACjBC,mBAAmB,GAGnB,kBAAC,IAAD,CAAKC,QAAQ,OAAOC,QAAQ,IAAIC,KAAK,YAGrC,kBAAC,IAAD,CAAKF,QAAQ,MAAMC,QAAQ,IAAIC,KAAK,YACpC,kBAAC,IAAD,CAAKF,QAAQ,QAAQC,QAAQ,IAAIC,KAAK,YACtC,kBAAC,IAAD,CAAKF,QAAQ,MAAMC,QAAQ,IAAIC,KAAK,YACpC,kBAAC,IAAD,CAAKF,QAAQ,UAAUC,QAAQ,IAAIC,KAAK,YACxC,kBAAC,IAAD,CAAKF,QAAQ,OAAOC,QAAQ,IAAIC,KAAK,YACrC,kBAAC,IAAD,CAAKF,QAAQ,QAAQC,QAAQ,IAAIC,KAAK,YACtC,kBAAC,IAAD,CAAKF,QAAQ,UAAUC,QAAQ,IAAIC,KAAK,YACtC,kBAAC,IAAD,CAAQC,OAAO,WAAWC,MAAM,OAAOC,cAAc,SAASC,SAAS,e,GAxBpCC,iBAAxBX,EACZY,YAAc,6C,wCCNJC,E,iLAKjB,OACI,6BAAS/J,GAAK,iBACd,yDACA,mHACA,yBAAKwD,IAAKwG,IAAMvG,IAAI,iBACpB,qOACA,yBAAKD,IAAKyG,IAAMxG,IAAI,sB,GAXetB,a,oCCcrC+H,E,2MAEFC,aAAgB,CAACC,IAAUC,K,EAE3BC,iBAAmB,WACf,EAAKxJ,SAAS,CAAEqI,MAAOxG,OAAO4H,WAAYzB,OAAQnG,OAAO6H,YAAaC,YAAa9H,OAAO6H,YAAY,O,EAyB1G1K,MAAQ,CACJ4K,gBAAiB,GACjBC,SAAU,GACVxB,MAAO,EACPL,OAAQ,EACR5G,OAAQ,GACRqF,UAAW,GAGXqD,SAAU,EACVC,kBAAmB,OACnBJ,YAAa,IACbjG,MAAO,CAAC,CAAE,KAAQ,OAAQ,QAAU,GACpC,CAAE,KAAQ,MAAO,QAAU,GAC3B,CAAE,KAAQ,MAAO,QAAU,GAC3B,CAAE,KAAQ,UAAW,QAAU,GAC/B,CAAE,KAAQ,QAAS,QAAU,GAC7B,CAAE,KAAQ,OAAQ,QAAU,GAC5B,CAAE,KAAQ,QAAS,QAAU,GAC7B,CAAE,KAAQ,QAAS,QAAU,IAE7B4E,YAAa,CAAC,CAAE,KAAQ,OAAQ,WAAc,IAC9C,CAAE,KAAQ,MAAO,WAAc,IAC/B,CAAE,KAAQ,MAAO,WAAc,IAC/B,CAAE,KAAQ,UAAW,WAAc,IACnC,CAAE,KAAQ,QAAS,WAAc,GACjC,CAAE,KAAQ,OAAQ,WAAc,GAChC,CAAE,KAAQ,QAAS,WAAc,GACjC,CAAE,KAAQ,QAAS,WAAc,K,EAErC0B,cAAe,E,EAKfC,kBAAoB,WAEhB,IAAIC,EAAO,EAAKlL,MAAM6K,SAAS,EAAK7K,MAAM8K,UAAUI,KAEhDC,EAAM,GACNC,EAAW,EAAKpL,MAAM4K,gBAAgBM,GAG1C,IAAI,IAAI/I,KAAOiJ,EAAS,CACpB,IAAIC,EAAM,CAAC,KAASlJ,EAAK,WAAeiJ,EAASjJ,GAAM,KAAQA,GAC/DgJ,EAAI9J,KAAKgK,GAEbA,EAAM,GACN,IAAI,IAAInK,EAAI,EAAGA,EAAIiK,EAAI/J,OAAOF,IAC1BmK,EAAIF,EAAIjK,GAAG0D,MAAQuG,EAAIjK,GAAGoK,WAE9B,IAAIC,EAAI,GACRA,EAAElK,KAAKgK,GACP,EAAKrK,SAAS,CACVsI,YAAaiC,K,EAIrBC,0BAA4B,WACxB3I,OAAOY,iBAAiB,SAAUtC,KAAKqJ,kBACvCrJ,KAAKqJ,mBAGL,IAAK,IAAItJ,EAAI,EAAGA,EAAIuK,EAAYZ,SAASzJ,OAAQF,IAC7CuK,EAAYZ,SAAS3J,GAAGwK,iBAAmBvK,KAAKwK,mBAAmBF,EAAYZ,SAAS3J,GAAG0K,QAASH,EAAYZ,SAAS3J,GAAGb,YAKhIc,KAAKH,SAAS,CACV6J,SAAUY,EAAYZ,WAM1B,IAHA,IAAIgB,EAAc,GACdC,EAAU,GAENC,EAAG,EAAGA,EAAIC,EAAM7F,SAAS/E,OAAQ2K,IAIrC,IAHA,IAAIV,EAAMW,EAAM7F,SAAS4F,GACrBE,EAAYD,EAAM7F,SAAS4F,GAAG3F,WAAW8F,UACzCC,EAAUH,EAAM7F,SAAS4F,GAAG3F,WAAWgG,QACnCC,EAAIJ,EAAWI,GAAIF,EAASE,IAC7BP,EAAQO,IACJP,EAAQO,GAAGhB,EAAIjF,WAAWxB,MACzBkH,EAAQO,GAAGhB,EAAIjF,WAAWxB,OAAOyG,EAAIjF,WAAWrB,SAEhD+G,EAAQO,GAAGhB,EAAIjF,WAAWxB,MAAMyG,EAAIjF,WAAWrB,SAEnD8G,EAAYQ,IAAKhB,EAAIjF,WAAWrB,WAEhC+G,EAAQO,GAAK,GACbP,EAAQO,GAAGhB,EAAIjF,WAAWxB,MAAMyG,EAAIjF,WAAWrB,SAC/C8G,EAAYQ,GAAKhB,EAAIjF,WAAWrB,UAM5C,IAAI,IAAI5C,KAAO0J,EACX,IAAI,IAAIS,KAASR,EAAQ3J,GAAK,CAC1B,IAAIoK,EAAMT,EAAQ3J,GAAKmK,GACvBC,EAAOA,EAAMV,EAAY1J,GAAQ,IACjC2J,EAAQ3J,GAAKmK,GAAQC,EAG7BpL,KAAKH,SAAS,CACV4J,gBAAiBkB,IAIrB,IAEIX,EAAM,GACNC,EAAWU,EAHJL,EAAYZ,SAAS,GAAGK,MAMnC,IAAI,IAAI/I,KAAOiJ,EAAS,CAChBC,EAAM,CAAC,KAASlJ,EAAK,WAAeiJ,EAASjJ,GAAM,KAAQA,GAC/DgJ,EAAI9J,KAAKgK,GAEbA,EAAM,GACN,IAAQnK,EAAI,EAAGA,EAAIiK,EAAI/J,OAAOF,IAC1BmK,EAAIF,EAAIjK,GAAG0D,MAAQuG,EAAIjK,GAAGoK,WAE9B,IAAIC,EAAI,GACRA,EAAElK,KAAKgK,GACPlK,KAAKH,SAAS,CACVsI,YAAaiC,K,EAQrBiB,UAAY,G,EAEZC,aAAe,SAACC,GAEZ,EAAK1L,SAAS,CACVyG,UAAWiF,K,EAGnB5L,YAAc,SAACZ,EAAGU,EAAY+L,GAE1B,EAAK3L,SAAS,CACV8J,SAAU5K,EACV6K,kBAAmBnK,EACnBgM,eAAgB,EAAKvC,aAAasC,KAKtC,EAAK1B,qB,EAiFT4B,eAAe,SAACnI,GAEZ,IAAIyG,EAAM,KACV,GAAW,OAARzG,EACEyG,EAAM,CAAC,CAAE,KAAQ,OAAQ,QAAU,GACnC,CAAE,KAAQ,MAAO,QAAU,GAC3B,CAAE,KAAQ,MAAO,QAAU,GAC3B,CAAE,KAAQ,UAAW,QAAU,GAC/B,CAAE,KAAQ,QAAS,QAAU,GAC7B,CAAE,KAAQ,OAAQ,QAAU,GAC5B,CAAE,KAAQ,QAAS,QAAU,GAC7B,CAAE,KAAQ,QAAS,QAAU,QAE3B,CACHA,EAAM,CAAC,CAAE,KAAQ,OAAQ,QAAU,GAClC,CAAE,KAAQ,MAAO,QAAU,GAC3B,CAAE,KAAQ,MAAO,QAAU,GAC3B,CAAE,KAAQ,UAAW,QAAU,GAC/B,CAAE,KAAQ,QAAS,QAAU,GAC7B,CAAE,KAAQ,OAAQ,QAAU,GAC5B,CAAE,KAAQ,QAAS,QAAU,GAC7B,CAAE,KAAQ,QAAS,QAAU,IAC7B,IAAI,IAAIjK,EAAI,EAAGA,EAAIiK,EAAI/J,OAAQF,IAC3B,IAAI,IAAI6K,EAAI,EAAGA,EAAIrH,EAAMtD,OAAQ2K,IAC9B,GAAGZ,EAAIjK,GAAG0D,OAASF,EAAMqH,GAAG,CACxBZ,EAAIjK,GAAGsG,QAAO,EACd,OAMhB,EAAKxG,SAAS,CACV0D,MAAOyG,K,EAIf2B,UAAU,SAACC,EAAOvF,GAEd,EAAKxG,UAAS,SAAAhB,GAQV,MAAO,CACH0E,MARU1E,EAAM0E,MAAMzC,KAAI,SAAC2C,EAAM1D,GACjC,OAAI0D,IAASmI,EACF,CAAE,KAAQnI,EAAKA,KAAM,OAAU4C,GAE/B5C,U,EASvBoI,cAAgB,SAACpG,K,EAGjBqG,aAAa,SAACF,GACTrM,QAAQC,IAAIoM,GACb,EAAK/L,UAAS,SAAAhB,GAQV,MAAO,CACH0E,MARU1E,EAAM0E,MAAMzC,KAAI,SAAC2C,GAC3B,OAAIA,EAAKA,OAASmI,EACP,CAAE,KAAQnI,EAAKA,KAAM,QAAWA,EAAK4C,QAErC5C,U,kFA9TJsI,GACf,GAAIA,EAAUxI,QAAUvD,KAAKnB,MAAM0E,YAA2ByI,IAAlBD,EAAUxI,MAAmB,CAIrE,IADA,IAAI0I,EAAU,CAAC,OACNlM,EAAI,EAAGA,EAAIC,KAAKnB,MAAM0E,MAAMtD,OAAQF,IAAK,CAC9C,IAAI0D,EAAOzD,KAAKnB,MAAM0E,MAAMxD,GACxB0D,EAAK4C,QACL4F,EAAQ/L,KAAK,CAAC,KAAM,CAAC,MAAO,QAASuD,EAAKA,OAGlDzD,KAAKH,SAAS,CACVoB,OAAQgL,IAKbF,EAAUpC,WAAa3J,KAAKnB,MAAM8K,eAAiCqC,IAArBD,EAAUpC,UACvD3J,KAAK8J,sB,6CAwITpI,OAAOC,oBAAoB,SAAU3B,KAAKqJ,oB,yCAwB3BU,EAAM7K,GAOrB,IAJA,IAAIgN,EAAS,GACTjL,EAAS,GAETD,EAAK,GACAjB,EAAI,EAAGA,EAAIb,EAAWe,OAAQF,IAAK,CAGxC,GAFAiB,EAAM+I,EAAO,IAAMhK,EAEfb,EAAWa,GAAGiF,SACd,IAAK,IAAI4F,EAAI,EAAGA,EAAI1L,EAAWa,GAAGiF,SAAS/E,OAAQ2K,IAAK,CACpD,IAAIuB,EAAUjN,EAAWa,GAAGiF,SAAS4F,GAChB,SAAjBuB,EAAQ1I,KACRvE,EAAWa,GAAGK,KAAOlB,EAAWa,GAAGK,KAAKgM,QAAQD,EAAQ/L,KAAM,YAAc+L,EAAQE,IAAM,qBAAuBF,EAAQ/L,KAAO,QAE1G,aAAhB+L,EAAQ1I,KACdvE,EAAWa,GAAGK,KAAOlB,EAAWa,GAAGK,KAAKgM,QAAQD,EAAQ/L,KAAM,MAAQ+L,EAAQ/L,KAAO,QAChE,eAAhB+L,EAAQ1I,OACbvE,EAAWa,GAAGK,KAAOlB,EAAWa,GAAGK,KAAKgM,QAAQD,EAAQ/L,KAAM,MAAQ+L,EAAQ/L,KAAO,SAOjG,GAAIlB,EAAWa,GAAGuM,QACd,IAAK1B,EAAI,EAAGA,EAAI1L,EAAWa,GAAGuM,QAAQrM,OAAQ2K,IAAK,CAC/C,IAAIxI,EAASlD,EAAWa,GAAGuM,QAAQ1B,GACnC,GAAIxI,EAAOmK,UAAW,CACS,SAAxBnK,EAAOmK,UAAU9I,KAChBxC,EAAS,CAEL,OAASjB,KAAK0L,eACd,QAAW,IAEiB,UAAxBtJ,EAAOmK,UAAU9I,OACzBxC,EAAS,CAEL,OAASjB,KAAK6L,cACd,QAAW,KAInB,IAAK,IAAIX,EAAI,EAAGA,EAAI9I,EAAOmK,UAAUC,SAASvM,OAAQiL,IAClDhM,EAAWa,GAAGK,KAAOlB,EAAWa,GAAGK,KAAKgM,QAAQhK,EAAOmK,UAAUC,SAAStB,GAAI,gBAAkB9I,EAAOmK,UAAUC,SAAStB,GAAK,KAAO9I,EAAOmK,UAAUC,SAAStB,GAAK,WACrKjK,EAAOoB,QAAQnC,KAAKF,KAAKyM,IAAIrK,EAAOmK,UAAUC,SAAStB,KAK5D9I,EAAOsK,UACNzL,EAAS,CAEL,OAASjB,KAAKsL,aACd,QAAWlJ,EAAOsK,UAO/BxN,EAAWa,GAAG4M,UACbzN,EAAWa,GAAGQ,MAAQP,KAAKkJ,aAAahK,EAAWa,GAAG4M,UAI1DT,EAAOhM,KACC,yBAAMC,QAASjB,EAAWa,GAAIhB,GAAIiC,EAAKP,aAAcQ,EAAQqF,UA/DzD,MAmEhB,OAAO4F,I,0BA6EPU,GACA,OAAOA,EAAMR,QAAQ,OAAO,SAAAS,GAAC,OAAIA,EAAEC,mB,+BAE7B,IAAD,OACL,OACI,yBAAKjM,UAAU,OACX,yBAAKA,UAAU,SAAS9B,GAAG,WACtBiB,KAAKnB,MAAM6K,SAAS5I,KACjB,SAAC2J,EAAS1K,GAAV,OACI,kBAAC,EAAD,CACIiB,IAAKjB,EACLhB,GAAIgB,EACJ0F,KAAMgF,EAAQjK,MACduM,UAAWtC,EAAQsC,UACnBpD,SAAU,EAAK9K,MAAM8K,eAgBrC,yBAAK9I,UAAU,iBAEX,yBAAKA,UAAU,SAASsD,MAAO,CAAC0D,OAAQ7H,KAAKnB,MAAM2K,YAAawD,OAAyC,SAAjChN,KAAKnB,MAAM+K,kBAA+B,OAAS,GAAI1B,MAAwC,SAAjClI,KAAKnB,MAAM+K,kBAA+B,MAAQ,MAAO5H,IAAK,UAE/LhC,KAAKnB,MAAM6K,SAAS5I,KACjB,SAAC2J,EAAS1K,GAAV,OAEI,kBAAC,EAAD,CACIiB,IAAKjB,EACLhB,GAAIgB,EACJN,YAAagL,EAAQhL,YACrBC,IAAK,EACLE,OAAS6K,EAAQkC,QACjBrN,SAAU,EAAKT,MAAM8K,SACrBnJ,MAAOiK,EAAQjK,MACfvB,WAAY,WAAawL,EAAQsC,UACjC7N,WAAYuL,EAAQF,uBAKC,QAAjCvK,KAAKnB,MAAM+K,kBACP,kBAAC,EAAD,CAAcrG,MAAOvD,KAAKnB,MAAM0E,MAAOiB,KAAMqG,EAAOhD,OAAQ7H,KAAKnB,MAAM2K,YAAalD,UAAWtG,KAAKnB,MAAMyH,UAAWrF,OAAQjB,KAAKnB,MAAMoC,OAAQ4B,gBAAoCmJ,IAAxBhM,KAAKnB,MAAM6K,SAA0B1J,KAAKnB,MAAM6K,SAAS1J,KAAKnB,MAAM8K,UAAUI,KAAO,SAEhN,UAAjC/J,KAAKnB,MAAM+K,kBACP,kBAAC,EAAD,CAAWrH,IAAOvC,KAAKnB,MAAM4M,eAAiBjJ,IAAOxC,KAAKnB,MAAM4M,iBAC5B,cAAjCzL,KAAKnB,MAAM+K,kBACd,kBAAC,EAAD,MAGA,2C,GA3YJ1I,aAqZtB+L,EAAY,SAAC,GAAD,IAAE1K,EAAF,EAAEA,IAAIC,EAAN,EAAMA,IAAN,OAEd,yBAAK3B,UAAW,aAEZ,yBAAK0B,IAAOA,EAAKC,IAAOA,MAyB1B0K,GArBwBhM,YAaLA,YAQL,SAAC,GAAD,IAAGnC,EAAH,EAAGA,GAAI0G,EAAP,EAAOA,KAAMsH,EAAb,EAAaA,UAAWpD,EAAxB,EAAwBA,SAAxB,OAEhB,kBAAC,IAAD,CACIwD,SAAQ,mBAAcJ,GACtBK,YAAY,GACZ,yBAAKvM,UAAS,kBAAa9B,IAAO4K,EAAW,gBAAkB,KAA/D,IAAuElE,EAAvE,QAGR5D,IAASkE,OAAO,kBAAC,EAAD,MAAmBsB,SAASgG,eAAe,W","file":"static/js/main.cf2ecc8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/piechart1.f650fda7.png\";","module.exports = __webpack_public_path__ + \"static/media/image-ANIMATION.97aed607.gif\";","module.exports = __webpack_public_path__ + \"static/media/tableData.954ebf8c.png\";","module.exports = __webpack_public_path__ + \"static/media/JSONdata.1e920299.png\";","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport Observer from '@researchgate/react-intersection-observer';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nexport default class StoryPanel extends Component {\r\n  //a storypanel is visible whenit enters the viewport until another enters.\r\n  m_actionFilter = null\r\n  state = {\r\n    visible: true,\r\n    id: this.props.id,\r\n    anchorname: this.props.anchorname,\r\n    paragraphs: []\r\n  };\r\n\r\n  headerHandleChange = event => {\r\n\r\n    if (event.isIntersecting && this.props.id !== this.props.activeID) {  //this element scrolled into view\r\n      console.log(this.props.typeContent)\r\n      this.props.app.setActiveID(this.props.id, this.props.typeContent, this.props.imgUrl)\r\n    }\r\n\r\n    this.setState({\r\n      visible: this.props.id === this.props.activeID\r\n\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    var res = [];\r\n    for (var i = 0; i < this.props.paragraphs.length; i++) {\r\n      res.push(\r\n        { \"text\": this.props.paragraphs[i].props.content.text, \"code\": this.props.paragraphs[i].props.content.code, \"imageClass\": this.props.paragraphs[i].props.content.imageClass, \"image\": this.props.paragraphs[i].props.content.image, \"title\": this.props.paragraphs[i].props.content.title, \"filter\": this.props.paragraphs[i].props.actionFilter }\r\n      )\r\n\r\n      //  console.log(res)\r\n\r\n      this.setState({\r\n        paragraphs: res\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <Observer onChange={this.headerHandleChange}\r\n      threshold={0.3}\r\n      rootMargin=\"20% 0% 0% 0%\"\r\n    >\r\n      <section id={\"section_\" + this.state.id} className={`storyPanelSection ${this.state.visible && this.state.id === this.props.activeID ? 'activePanel' : 'inactivePanel'}`} >\r\n       \r\n\r\n          <h1 id={this.props.anchorname} className={`sticky sectiontitle`}>{this.props.title}</h1>\r\n       \r\n\r\n        <div id={this.props.anchorname + \"_id\"} className=\"panelcontent\">\r\n          {this.state.paragraphs.map(\r\n            (paragraph, i) =>\r\n            <div key={i}>\r\n              <StoryParagraph\r\n                key={this.state.anchorname + \"_id_p\" + i}\r\n                id={this.state.anchorname + \"_id_p\" + i}\r\n                title={paragraph.title}\r\n                paragraph={paragraph.text}\r\n                code={paragraph.code}\r\n                image={paragraph.image}\r\n                imageClass={paragraph.imageClass}\r\n                actionFilter={paragraph.filter}\r\n\r\n              />\r\n             \r\n              </div>\r\n          )}\r\n        </div>\r\n\r\n      </section>\r\n      </Observer>\r\n    )\r\n  }\r\n}\r\n\r\nclass StoryParagraph extends Component {\r\n\r\n\r\n  m_firedAction = false\r\n  m_statusChanged = false\r\n  m_filterArray = [\"any\", []]\r\n  state = {\r\n    id: this.props.id,\r\n    visible: false\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  };\r\n\r\n  handleScroll(event) {\r\n    //if the element is visible we check where it is on the screen, and highlight it when it enters a threshold, dehighlight when it exits.\r\n    if (this.state.visible) {\r\n      var topOffset = ReactDOM.findDOMNode(this).getBoundingClientRect().top\r\n      var bottomOffset = ReactDOM.findDOMNode(this).getBoundingClientRect().bottom\r\n      if (!this.m_firedAction) {\r\n        if (this.state.highlighted) {\r\n          if (this.props.actionFilter) { //if this has any actions supplied\r\n\r\n            this.props.actionFilter.action(this.props.actionFilter.objects, true)\r\n            //   this.m_mapFunctions.setFilterTypeString(this.m_filterArray)\r\n            //TODO HERE this.props.actionFilter.action\r\n          }\r\n          this.m_firedAction = true;\r\n        } else {\r\n          if (this.props.actionFilter) {\r\n\r\n            this.props.actionFilter.action(null, true)\r\n            // this.m_mapFunctions.showAllTypes()\r\n            this.m_firedAction = true;\r\n          }\r\n        }\r\n      }\r\n      if ((topOffset > 150 && topOffset < 300) || (topOffset < 150 && topOffset > 0 && bottomOffset > 300)) {\r\n        //if this paragraph has anactionFilter to it, apply it!\r\n        if (!this.state.highlighted) {\r\n          this.setState({\r\n            highlighted: true\r\n          })\r\n          this.m_firedAction = false\r\n        }\r\n\r\n\r\n      } else {\r\n\r\n        if (this.state.highlighted) {\r\n          //visible should update...\r\n          this.setState({\r\n            highlighted: false\r\n          })\r\n          //deactivate filter if thereisonw\r\n          this.m_firedAction = false\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n\r\n    //construct the filter if there is one\r\n    /*if (this.props.actionFilter) {\r\n      this.m_filterArray = [\"any\"]\r\n      //create the filter syntax fromthe actionFilter provided\r\n      for (var i = 0; i < this.props.actionFilter.types.length; i++) {\r\n        this.m_filterArray.push([\"==\", [\"get\", \"type\"], this.props.actionFilter.types[i]])\r\n      }\r\n      \r\n     \r\n    }*/\r\n  }\r\n\r\n  //gets called when the element intersects with Observer\r\n  paragraphChange = event => {\r\n    this.setState({\r\n      visible: event.isIntersecting\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Observer\r\n        onChange={this.paragraphChange}\r\n      >\r\n        <div> {this.props.title ?\r\n          <h3>{this.props.title}</h3>\r\n          :\r\n          \"\"}\r\n          <div\r\n            className={`scrolltext ${this.state.highlighted ? \"active\" : \"\"}`}\r\n            id={this.props.id}>\r\n            {this.props.image ?\r\n              <div className={this.props.imageClass}>\r\n                <img src={this.props.image} alt={this.props.image} />\r\n              </div>\r\n              :\r\n              \"\"}\r\n            {this.props.code ? \r\n              <div>\r\n              {this.props.code.map(\r\n                (codeSnippet,id)=>\r\n                  <code key={id}className=\"codeSection\">{ReactHtmlParser(codeSnippet)}</code>\r\n                ) \r\n              }\r\n              </div> \r\n              : \"\"}\r\n            <p>\r\n              {ReactHtmlParser(this.props.paragraph)}\r\n            </p>\r\n\r\n          </div>\r\n        </div>\r\n      </Observer>\r\n    )\r\n  }\r\n}\r\n","import mapboxgl from 'mapbox-gl'\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\n//import geojson from 'geojson'\r\nexport default class MapFunctions extends Component {\r\n\r\n    // set to 2017 initially despite play preview or you get a bug when using the type dropdown\r\n    m_filterStartYear = ['<=', ['number', ['get', 'yearStart']], this.props.activeYear]\r\n    m_filterEndYear = ['>=', ['number', ['get', 'yearEnd']], this.props.activeYear]\r\n    m_filterType = ['!=', ['string', ['get', 'type']], 'placeholder']\r\n\r\n    m_filterName = ['!=', ['string', ['get', 'site']], 'placeholder']\r\n\r\n    m_initiated = false\r\n    map = null\r\n\r\n    app = null\r\n    tooltipContainer\r\n    popup\r\n    self = null\r\n    grump = null\r\n    m_colors = {\r\n        \"Coal\": \"#ced1cc\",\r\n        \"Storage\": \"#4e80e5\",\r\n        \"Solar\": \"#ffc83e\",\r\n        \"Nuclear\": \"#dd54b6\",\r\n        \"Oil\": \"#a45edb\",\r\n        \"Hydro\": \"#43cfef\",\r\n        \"Wave & Tidal\": \"#43cfef\",\r\n        \"Wind\": \"#00a98e\",\r\n        \"Biomass\": \"#A7B734\",\r\n        \"Waste\": \"#ea545c\",\r\n        \"Gas\": \"#cc9b7a\",\r\n    }\r\n\r\n    state = {\r\n\r\n        currentYear: this.props.activeYear,\r\n        rawtypes: this.props.types\r\n    }\r\n\r\n\r\n    init() {\r\n        if (!this.m_initiated) {\r\n            mapboxgl.accessToken = \"pk.eyJ1Ijoibm9yYWhhbWEiLCJhIjoiY2ptaGFsZDR5MThrczN1dDhtajc1cTFmMSJ9.VEUImGmfsM77LfjErYxDdQ\"\r\n            this.map = new mapboxgl.Map({\r\n                container: \"map\",\r\n                style: \"mapbox://styles/mapbox/streets-v9\",\r\n                zoom: [5],\r\n                center: [-4, 55.3781]\r\n            })\r\n\r\n            // const filterType = ['!=', ['string', ['get', 'technology']], 'Battery (Discharging)'];\r\n            var self = this\r\n            this.map.on('load', function(){\r\n                self.map.addSource('powerplants', { type: 'geojson', data: self.props.data });\r\n                const tooltip = new mapboxgl.Marker(this.tooltipContainer, {\r\n                    offset: [-140, 0]\r\n                }).setLngLat([0, 0]).addTo(self.map);\r\n\r\n                self.map.on('mouseenter', 'powerplants', function (e) {\r\n                    // Change the cursor style as a UI indicator.\r\n                    console.log(\"enter: \" + e.features[0].properties.site)\r\n                    tooltip.setLngLat(e.lngLat);\r\n                    self.grump = e.features[0]\r\n                    self.map.getCanvas().style.cursor = 'pointer';\r\n                    self.testFunction(true)\r\n\r\n                })\r\n\r\n                self.map.on('mousemove', 'powerplants', function (e) {\r\n                    tooltip.setLngLat(e.lngLat);\r\n                    self.grump = e.features[0]\r\n                    self.map.getCanvas().style.cursor = 'pointer';\r\n                    self.testFunction(true)\r\n\r\n                })\r\n\r\n                self.map.on('mouseleave', 'powerplants', function (e) {\r\n\r\n                    self.map.getCanvas().style.cursor = '';\r\n                    self.testFunction(false)\r\n                });\r\n                // Change the cursor style as a UI indicator.\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.m_initiated = true;\r\n            })\r\n    }}\r\n\r\n    setTooltip(show, color, name, capacity, lowCarbon, operator, open, fuel, chp) {\r\n        if (show) {\r\n\r\n            ReactDOM.render(\r\n                React.createElement(\r\n                    PopupContent, {\r\n                    color, name, capacity, lowCarbon, operator, open, fuel, chp\r\n                }\r\n                ),\r\n                this.tooltipContainer\r\n            )\r\n        } else {\r\n\r\n            ReactDOM.unmountComponentAtNode(this.tooltipContainer)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n \r\n        //   console.log(this.props.filter)\r\n        if (this.props.activeYear !== this.state.currentYear) {\r\n            //  console.log(\"new year: \" + this.props.activeYear)\r\n            this.setState({\r\n                currentYear: this.props.activeYear\r\n\r\n            })\r\n            this.m_filterStartYear = ['<=', ['number', ['get', 'yearStart']], this.props.activeYear]\r\n            this.m_filterEndYear = ['>=', ['number', ['get', 'yearEnd']], this.props.activeYear]\r\n            this.updateFilters()\r\n        }\r\n        if (this.props.types !== this.state.rawtypes) {\r\n            this.m_filterType = [\"any\"]\r\n            //create the filter syntax fromthe actionFilter provided\r\n            for (var i = 0; i < this.props.types.length; i++) {\r\n                if (this.props.types[i].active)\r\n                    this.m_filterType.push([\"==\", [\"get\", \"type\"], this.props.types[i].type])\r\n            }\r\n\r\n            this.setState({\r\n\r\n                rawtypes: this.props.types\r\n            })\r\n            this.updateFilters()\r\n        }\r\n        if (this.props.drawOnMap) {\r\n            if (this.map.isStyleLoaded()) {\r\n                if (this.map.getLayer(\"powerplants\")) {\r\n                    this.map.removeLayer(\"powerplants\")\r\n              \r\n                }\r\n                //{colored: true, differentSizes: false, opacity: false, tooltip: false}\r\n                var circlecolor = []\r\n                var opacity\r\n                var tooltip\r\n                var circleradius\r\n                if (this.props.drawOnMap.colored) {\r\n                    circlecolor = [\r\n                        'match',\r\n                        ['get', 'type'],\r\n                        \"Coal\", \"#ced1cc\",\r\n                        \"Storage\", \"#4e80e5\",\r\n                        \"Solar\", \"#ffc83e\",\r\n                        \"Nuclear\", \"#dd54b6\",\r\n                        \"Oil\", \"#a45edb\",\r\n                        \"Hydro\", \"#43cfef\",\r\n                        \"Wave & Tidal\", \"#43cfef\",\r\n                        \"Wind\", \"#00a98e\",\r\n                        \"Biomass\", \"#A7B734\",\r\n                        \"Waste\", \"#ea545c\",\r\n                        \"Gas\", \"#cc9b7a\",\r\n                        '#ccc'\r\n                    ]\r\n                } else {\r\n                    circlecolor = \"#000\"\r\n                }\r\n\r\n                if (this.props.drawOnMap.differentSizes) {\r\n                    circleradius = {\r\n                        property: 'capacity',\r\n                        type: 'exponential',\r\n                        base: 2,\r\n                        stops: [\r\n\r\n                            [{ zoom: 2, value: 1.5 }, 1],\r\n                            [{ zoom: 2, value: 2500 }, 5],\r\n                            [{ zoom: 4.5, value: 1.5 }, 2],\r\n                            [{ zoom: 4.5, value: 2500 }, 21],\r\n                            [{ zoom: 8, value: 1.5 }, 4],\r\n                            [{ zoom: 8, value: 2500 }, 32],\r\n                            [{ zoom: 12, value: 1.5 }, 6],\r\n                            [{ zoom: 12, value: 2500 }, 37],\r\n                            [{ zoom: 15, value: 1.5 }, 8],\r\n                            [{ zoom: 15, value: 2500 }, 42]\r\n                        ]\r\n\r\n                    }\r\n                } else {\r\n                    circleradius = 2\r\n                }\r\n\r\n                if (this.props.drawOnMap.opacity) {\r\n                    opacity = 0.77\r\n                } else {\r\n                    opacity = 1\r\n                }\r\n\r\n                var paint =\r\n                {\r\n                    'circle-radius': circleradius,\r\n                    'circle-color': circlecolor,\r\n                    'circle-opacity': opacity\r\n                }\r\n\r\n                this.map.addLayer({\r\n                    id: 'powerplants',\r\n                    type: 'circle',\r\n                    source: 'powerplants',\r\n                    paint: paint,\r\n                    'filter': ['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType, this.m_filterName]\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.tooltipContainer = document.createElement('div');\r\n        this.init()\r\n    }\r\n    testFunction(show) {\r\n\r\n        var o = this.grump\r\n        var name = o.properties.site;\r\n        var capacity = o.properties.capacity;\r\n        var type = o.properties.type;\r\n        var fuelDetail = o.properties.fuelDetail;\r\n        var lowCarbon = o.properties.lowCarbon;\r\n        var operator = o.properties.operator;\r\n        var chp = o.properties.chp;\r\n        var open = o.properties.yearOpen;\r\n        var plantColor = this.m_colors[o.properties.type];\r\n\r\n        this.setTooltip(show, plantColor, name, capacity, lowCarbon, operator, open, this.getFuel(type, fuelDetail), chp)\r\n        // Ensure that if the map is zoomed out such that multiple\r\n        // copies of the feature are visible, the popup appears over the copy being pointed to.\r\n        //   while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n        //      coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n        // }\r\n\r\n        // Populate the popup and set its coordinates\r\n        // based on the feature found.\r\n        //  this.popup.setLngLat(coordinates)\r\n        //      .setHTML(<PopupContent color={plantColor} name={name} capacity={this.roundToOne(capacity)} lowCarbon={lowCarbon} operator={operator} open={open} fuel={this.getFuel(type, fuelDetail)} chp={chp} />)\r\n        //      .addTo(this.map);\r\n    }\r\n\r\n    setFilterType(filtertype) {\r\n        if (this.map.isStyleLoaded()) {\r\n            this.m_filterType = [\"all\", [\"==\", [\"get\", \"type\"], filtertype]]\r\n            this.updateFilters()\r\n        }\r\n    }\r\n\r\n    setFilterName(name) {\r\n        if (this.map.isStyleLoaded()) {\r\n            if (name !== \"all\") {\r\n                this.m_filterName = [\"all\", [\"!=\", [\"get\", \"site\"], name]]\r\n\r\n            } else {\r\n                this.m_filterName = null\r\n            }\r\n            this.updateFilters()\r\n        }\r\n    }\r\n    updateFilters() {\r\n        if (this.map.isStyleLoaded()) {\r\n            // map.setFilter('powerplants', ['all', filterOperator, filterType, filterStartYear, filterEndYear, filterSite, filterCapacity]);\r\n            this.map.setFilter('powerplants', ['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType, this.m_filterName])\r\n        }\r\n    }\r\n\r\n    getFuel = (type, fuelDetail) => {\r\n        if (fuelDetail === \"-\") {\r\n            return type\r\n        } else if (type === \"Wind\" || type === \"Hydro\") {\r\n            return fuelDetail\r\n        } else {\r\n            return type + \", \" + fuelDetail\r\n        }\r\n    }\r\n\r\n    roundToOne = (capacity) => {\r\n        return +(Math.round(capacity + \"e+1\") + \"e-1\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div style={{ height: this.props.height }} ref={el => this.mapContainer = el} className=\"mapContainer topDistance\" id=\"map\" />\r\n\r\n        )\r\n    }\r\n\r\n}\r\nconst PopupContent = ({ color, name, capacity, lowCarbon, operator, open, fuel, chp }) => (\r\n    <div className={`colour-key popupDiv`}>\r\n        <h3 className=\"popupHeading\" style={{ color: color }}> {name}</h3>\r\n        <div className=\"popupInfo\" style={{ 'backgroundColor': color }} >\r\n            <p className=\"inline\">{fuel}</p>\r\n            <p><span className=\"label-title\">Capacity: </span>{capacity}<span className=\"units\">MW</span></p>\r\n            <p><span className=\"label-title\">Low carbon? </span>{lowCarbon}</p>{chp !== \"-\" ? <p><span className=\"label-title\">Combined heat and power?</span>{chp}</p> : \"\"}\r\n            <p><span className=\"label-title\">Operator: </span> {operator}</p>\r\n            <p><span className=\"label-title\">Year opened: </span> {open} </p>\r\n        </div>\r\n    </div>\r\n)\r\n\r\n","// with help from https://bl.ocks.org/reinson/166bae46dd106b45cf2d77c7802768ca\r\n\r\n// zero data converted to 0.001 to avoid messing up the order of the colours if bars are added/removed\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  BarChart, Bar, Legend\r\n} from 'recharts';\r\n\r\n  \r\n  export default class Stackedbarchart extends PureComponent {\r\n    static jsfiddleUrl = 'https://jsfiddle.net/alidingling/90v76x08/';\r\n   \r\n\r\n    render() {\r\n      return (\r\n         <div>\r\n        <BarChart\r\n          width={this.props.width+20}\r\n          height={this.props.height}\r\n          data={this.props.percentages}\r\n          reverseStackOrder={true}\r\n        >\r\n         \r\n          <Bar dataKey=\"Coal\" stackId=\"a\" fill=\"#ced1cc\" />\r\n          \r\n         \r\n          <Bar dataKey=\"Gas\" stackId=\"a\" fill=\"#cc9b7a\" />\r\n          <Bar dataKey=\"Hydro\" stackId=\"a\" fill=\"#43cfef\" />\r\n          <Bar dataKey=\"Oil\" stackId=\"a\" fill=\"#a45edb\" />\r\n          <Bar dataKey=\"Nuclear\" stackId=\"a\" fill=\"#dd54b6\" />\r\n          <Bar dataKey=\"Wind\" stackId=\"a\" fill=\"#00a98e\" />\r\n          <Bar dataKey=\"Solar\" stackId=\"a\" fill=\"#ffc83e\" />\r\n          <Bar dataKey=\"Biomass\" stackId=\"a\" fill=\"#A7B734\" />\r\n            <Legend layout=\"vertical\" align=\"left\" verticalAlign=\"middle\" iconType=\"rect\"/>\r\n        </BarChart>\r\n        \r\n       </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n","import img1 from './images/piechart1.png'\r\nimport gif2 from './images/image-ANIMATION.gif'\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nexport default class SimpleWebsite extends Component {\r\n\r\n// renders a simple website with the charts and graphs created in Excel\r\n\r\nrender() {\r\n    return (\r\n        <section id = \"simpleWebsite\">\r\n        <h1> This is a simple website</h1>\r\n        <p> I can display images that were created previously on this site, and explain things!</p>\r\n        <img src={img1} alt=\"piechart2005\" />\r\n        <p> In 2005, large parts of the UK power capacity was generated via coal and gas plants. Over time, change happened, with more solar and wind plants popping up. By 2020, coal was completely eliminated.</p>\r\n        <img src={gif2} alt=\"OverTime Gif\" />\r\n        </section>\r\n        \r\n    )\r\n}\r\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/responsive.css'\n//import ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\nimport StoryPanel from './StoryPanel.js'\n//import * as d3 from 'd3'\nimport data2 from './ukdata/power_stations.json'\nimport MapFunctions from './MapFunctions.js';\nimport sectiondata from './playdata/sections.json'\nimport ScrollIntoView from 'react-scroll-into-view'\nimport Stackedbarchart from './stacked-bar.js'\nimport SimpleWebsite from './SimpleWebsite.js'\n\n\n//images\nimport tableData from './images/tableData.png'\nimport jsonData from './images/JSONdata.png'\nclass ScrollyTeller extends Component {\n\n    imagesOnsite =  [tableData,jsonData]\n\n    updateDimensions = () => {\n        this.setState({ width: window.innerWidth, height: window.innerHeight, panelHeight: window.innerHeight-100 });\n\n      };\n    componentDidUpdate(prevState) {\n        if (prevState.types !== this.state.types && prevState.types!==undefined) {\n        //    console.log(prevState.types)\n         //   console.log(this.state.types)\n            var vfilter = [\"any\"]\n            for (var i = 0; i < this.state.types.length; i++) {\n                var type = this.state.types[i]\n                if (type.active) {\n                    vfilter.push([\"==\", [\"get\", \"type\"], type.type])\n                }\n            }\n            this.setState({\n                filter: vfilter\n            })\n           // this.m_mapFunctions.setFilterTypeString(filter)\n        }\n\n        if(prevState.activeId !== this.state.activeId && prevState.activeId!==undefined){\n            this.updatePercentages()\n        }\n    }\n    //  m_mapfilter = null;\n    state = {\n        percentageCalcs: {},\n        sections: [],\n        width: 0,\n        height: 0,\n        filter: \"\",\n        drawOnMap: \"\",\n        //the years should be read from a file with their corresponding html content\n        // sorteddata: [],\n        activeId: 0,\n        activeTypeContent: \"none\", \n        panelHeight: 800,\n        types: [{ \"type\": \"Coal\", \"active\": true },\n        { \"type\": \"Gas\", \"active\": true },\n        { \"type\": \"Oil\", \"active\": true },\n        { \"type\": \"Nuclear\", \"active\": true },\n        { \"type\": \"Hydro\", \"active\": true },\n        { \"type\": \"Wind\", \"active\": true },\n        { \"type\": \"Waste\", \"active\": true },\n        { \"type\": \"Solar\", \"active\": true }],\n\n        percentages: [{ \"type\": \"Coal\", \"percentage\": 45 },\n        { \"type\": \"Gas\", \"percentage\": 10  },\n        { \"type\": \"Oil\", \"percentage\": 10  },\n        { \"type\": \"Nuclear\", \"percentage\": 15  },\n        { \"type\": \"Hydro\", \"percentage\": 8  },\n        { \"type\": \"Wind\", \"percentage\": 6  },\n        { \"type\": \"Waste\", \"percentage\": 3  },\n        { \"type\": \"Solar\", \"percentage\": 3  }]\n    }\n    panelChanged = false\n   // m_mapFunctions = null\n    //\"Facility Name\", \"Status\", \"Region\", \"Technology\", \"Generator Capacity (MW)\", \"Latitude\", \"Longitude\"\n\n\n    updatePercentages = () => {\n  \n        var year = this.state.sections[this.state.activeId].year\n       // console.log(year)\n        var arr = []\n        var yearPerc = this.state.percentageCalcs[year]\n     \n        //console.log(yearPerc)\n        for(var key in yearPerc){\n            var obj = {\"type\" : key, \"percentage\" : yearPerc[key], \"name\": key}\n            arr.push(obj)\n        }\n        obj = {}\n        for(var i = 0; i < arr.length;i++){\n            obj[arr[i].type] = arr[i].percentage\n        }\n        var t = []\n        t.push(obj)\n        this.setState({\n            percentages: t\n        })\n        //console.log(t)\n    }\n    UNSAFE_componentWillMount = function () {\n        window.addEventListener('resize', this.updateDimensions);\n        this.updateDimensions()\n        \n    \n        for (var i = 0; i < sectiondata.sections.length; i++) {\n            sectiondata.sections[i].renderparagraphs = this.createPanelContent(sectiondata.sections[i].section, sectiondata.sections[i].paragraphs)\n\n        }\n        //  console.log(sectiondata.sections[4].renderparagraphs)\n        //read the content from file.\n        this.setState({\n            sections: sectiondata.sections\n        })\n\n        var helperArray = {}\n        var tempArr = {}\n        //fill percentage calculations\n        for(var j =0; j < data2.features.length; j++){\n            var obj = data2.features[j]\n            var yearstart = data2.features[j].properties.yearStart\n            var yearend = data2.features[j].properties.yearEnd\n            for(var k = yearstart; k <=yearend; k++){\n                if(tempArr[k]){\n                    if(tempArr[k][obj.properties.type]){\n                        tempArr[k][obj.properties.type]+=obj.properties.capacity\n                    } else {\n                        tempArr[k][obj.properties.type]=obj.properties.capacity\n                    }\n                    helperArray[k]+= obj.properties.capacity\n                } else {\n                    tempArr[k] = {}\n                    tempArr[k][obj.properties.type]=obj.properties.capacity\n                    helperArray[k] = obj.properties.capacity\n                }\n            }\n        }\n       // console.log(helperArray)\n        //now normalise to 100%\n        for(var key in helperArray){\n            for(var key2 in  tempArr[key]){\n                var num = tempArr[key][key2]\n                num = (num / helperArray[key]) * 100\n                tempArr[key][key2] = num\n            }\n        }\n        this.setState({\n            percentageCalcs: tempArr\n        })\n\n        /* this needs to be done once at the beginning and then when the component updates */\n        var year = sectiondata.sections[0].year\n       // console.log(year)\n        var arr = []\n        var yearPerc = tempArr[year]\n     \n        //console.log(yearPerc)\n        for(var key in yearPerc){\n            var obj = {\"type\" : key, \"percentage\" : yearPerc[key], \"name\": key}\n            arr.push(obj)\n        }\n        obj = {}\n        for(var i = 0; i < arr.length;i++){\n            obj[arr[i].type] = arr[i].percentage\n        }\n        var t = []\n        t.push(obj)\n        this.setState({\n            percentages: t\n        })\n\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateDimensions);\n      }\n    allPanels = []\n\n    setDrawOnMap = (drawOnMapi) => {\n\n        this.setState({\n            drawOnMap: drawOnMapi\n        })\n    }\n    setActiveID = (id,typeContent,imgUrlId) => {\n      \n        this.setState({\n            activeId: id,\n            activeTypeContent: typeContent,\n            activeImageUrl: this.imagesOnsite[imgUrlId]\n        })\n        //this.m_mapFunctions.setFilterYearStart(this.state.years[id])\n     //   this.m_mapFunctions.setFilterStartEnd(this.state.sections[id].year)\n\n        this.updatePercentages()\n        //in each year i want to display plants that HAVE STARTED but NOT YET ENDED\n    }\n\n    createPanelContent(year, paragraphs) {\n\n        //read the text from somewhere based on the given year\n        var result = [];\n        var filter = \"\";\n        var drawOnMap = \"\"\n        var key =\"\"\n        for (var i = 0; i < paragraphs.length; i++) {\n            key = year + \"_\" + i\n            //check for features like links, if its a link, replace the \"text\" with a hyperlinnk to the \"url\"\n            if (paragraphs[i].features) {\n                for (var j = 0; j < paragraphs[i].features.length; j++) {\n                    var feature = paragraphs[i].features[j]\n                    if (feature.type === \"link\") {\n                        paragraphs[i].text = paragraphs[i].text.replace(feature.text, '<a href=\"' + feature.url + '\" target=\"_blank\">' + feature.text + '</a>')\n                        //                console.log(paragraphs[i].text)\n                    } else if(feature.type ===\"boldfont\"){\n                        paragraphs[i].text = paragraphs[i].text.replace(feature.text, '<b>' + feature.text + '</b>')\n                    }else if(feature.type ===\"italicfont\"){\n                        paragraphs[i].text = paragraphs[i].text.replace(feature.text, '<i>' + feature.text + '</i>')\n                    }\n\n                    \n                }\n            }\n            //if actions aredefined, they are added to the element here.\n            if (paragraphs[i].actions) {\n                for (j = 0; j < paragraphs[i].actions.length; j++) {\n                    var action = paragraphs[i].actions[j]\n                    if (action.highlight) {\n                        if(action.highlight.type===\"type\"){\n                            filter = {\n\n                                \"action\":this.setActiveMulti,\n                                \"objects\": []\n                            }\n                        } else if ( action.highlight.type===\"plant\"){\n                            filter = {\n\n                                \"action\":this.setActiveName,\n                                \"objects\": []\n                            }\n                        }\n                        //highlight means highlight the words in the text with a class of the same name, and filter things on the map of this name\n                        for (var k = 0; k < action.highlight.keywords.length; k++) {\n                            paragraphs[i].text = paragraphs[i].text.replace(action.highlight.keywords[k], \"<span class='\" + action.highlight.keywords[k] + \"'>\" + action.highlight.keywords[k] + \"</span>\")\n                            filter.objects.push(this.cap(action.highlight.keywords[k]))\n\n                            //capitalise first letter otherwise the filter breaks \n                        }\n                    }\n                    if(action.mapdemo){\n                        filter = {\n\n                            \"action\":this.setDrawOnMap,\n                            \"objects\": action.mapdemo\n                        }\n\n                    }\n                }\n            }\n\n            if(paragraphs[i].imageId){\n                paragraphs[i].image = this.imagesOnsite[paragraphs[i].imageId]\n          \n        \n            }\n            result.push(  \n                    <div  content={paragraphs[i]} id={key} actionFilter={filter} drawOnMap={drawOnMap}  />\n            )\n        }\n       // console.log(result)\n        return result\n\n    }\n\n    //gets called from child components or when the user clicked the type nav menu. updates state of that menu accordingly, also when a scrolltrigger (de)activated a type\n    setActiveMulti=(types)=> {\n       \n        var arr = null\n        if(types===null){\n             arr = [{ \"type\": \"Coal\", \"active\": true },\n             { \"type\": \"Gas\", \"active\": true },\n             { \"type\": \"Oil\", \"active\": true },\n             { \"type\": \"Nuclear\", \"active\": true },\n             { \"type\": \"Hydro\", \"active\": true },\n             { \"type\": \"Wind\", \"active\": true },\n             { \"type\": \"Waste\", \"active\": true },\n             { \"type\": \"Solar\", \"active\": true }]\n             \n        } else {\n            arr = [{ \"type\": \"Coal\", \"active\": false },\n             { \"type\": \"Gas\", \"active\": false },\n             { \"type\": \"Oil\", \"active\": false },\n             { \"type\": \"Nuclear\", \"active\": false },\n             { \"type\": \"Hydro\", \"active\": false },\n             { \"type\": \"Wind\", \"active\": false },\n             { \"type\": \"Waste\", \"active\": false },\n             { \"type\": \"Solar\", \"active\": false }]\n             for(var i = 0; i < arr.length; i++){\n                 for(var j = 0; j < types.length; j++){\n                    if(arr[i].type === types[j]){\n                        arr[i].active=true\n                        break;\n                    }\n                 }\n             }\n             \n        }\n        this.setState({\n            types: arr\n        })\n    }\n    \n    setActive=(ttype, active) =>{\n        //  console.log(index)\n        this.setState(state => {\n            const types = state.types.map((type, i) => {\n                if (type === ttype) {\n                    return { \"type\": type.type, \"active\": active }\n                } else {\n                    return type;\n                }\n            });\n            return {\n                types\n            };\n        })\n    }\n\n    setActiveName = (name) => {\n        \n    }\n    toggleActive=(ttype)=> {\n         console.log(ttype)\n        this.setState(state => {\n            const types = state.types.map((type) => {\n                if (type.type === ttype) {\n                    return { \"type\": type.type, \"active\": !type.active }\n                } else {\n                    return type;\n                }\n            });\n            return {\n                types\n            };\n        })\n    }\n    //capitalise the first letter of  string\n    cap(lower) {\n        return lower.replace(/^\\w/, c => c.toUpperCase());\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"navbar\" id=\"yearNav\">\n                    {this.state.sections.map(\n                        (section, i) =>\n                            <NavMenuItem\n                                key={i}\n                                id={i}\n                                name={section.title}\n                                sectionID={section.sectionID}\n                                activeId={this.state.activeId}\n                            />\n                    )}\n                </div>\n       {/*}         <div className=\"navbar\" id=\"typeNav\">\n                    {this.state.types.map(\n                        (type, i) =>\n                            <NavMenuTypeItem\n                                key={i}\n                                onClickA={this.toggleActive}\n                                type={type.type}\n                                active={type.active}\n                            />\n                    )}\n                </div>*/\n                    }\n                <div className=\"MainContainer\">\n                {/* <StackedBar  percentages={this.state.percentages} height={this.state.panelHeight}/>*/}\n                    <div className=\"Panels\" style={{height: this.state.panelHeight, margin: this.state.activeTypeContent === \"none\" ? \"auto\" : \"\", width: this.state.activeTypeContent === \"none\" ? \"60%\" : \"45%\", top: \"200px\"}}>\n\n                        {this.state.sections.map(\n                            (section, i) =>\n                              \n                                <StoryPanel\n                                    key={i}\n                                    id={i}\n                                    typeContent={section.typeContent}\n                                    app={this}\n                                    imgUrl={ section.imageId}\n                                    activeID={this.state.activeId} //the Storypanels figure out if they are the active panel and display accordingly\n                                    title={section.title}\n                                    anchorname={\"section_\" + section.sectionID}\n                                    paragraphs={section.renderparagraphs}\n                                />\n                            )}\n                    </div>\n                    { \n                        this.state.activeTypeContent === \"map\" ?\n                            <MapFunctions types={this.state.types} data={data2} height={this.state.panelHeight} drawOnMap={this.state.drawOnMap} filter={this.state.filter} activeYear={this.state.sections !== undefined ?  this.state.sections[this.state.activeId].year : \"2004\"} />\n                        :\n                            this.state.activeTypeContent === \"image\" ?\n                                <ImageDisp src = {this.state.activeImageUrl } alt = {this.state.activeImageUrl}/>\n                                :  this.state.activeTypeContent === \"component\" ? \n                                <SimpleWebsite />\n\n                                :\n                                <div>Test</div>\n\n                    }      \n                    \n                </div>\n            </div>\n        );\n    }\n}\n\nconst ImageDisp = ({src,alt}) => (\n\n    <div className =\"imageDisp\">\n\n        <img src = {src} alt = {alt} />\n    </div>\n    \n)\nclass NavMenuTypeItem extends Component {\n    handleClick = () => {\n      this.props.onClickA(this.props.type);\n    }\n  \n    render() {\n      return (\n        <div onClick={this.handleClick} className={`navItem ${this.props.active ? \"navItemActive\" : \"\"}`}> {this.props.type} </div>\n        \n      );\n    }\n}\n\nclass StackedBar extends Component {\n    render () {\n        return(\n            <div className=\"leftSide topDistance\" style={{height: this.props.height}}  id=\"stackedBar\">\n                <Stackedbarchart   percentages={this.props.percentages} width={120} height={this.props.height}> Placeholder for stacked bar</Stackedbarchart>\n            </div>\n    )}\n}\nconst NavMenuItem = ({ id, name, sectionID, activeId }) => (\n\n    <ScrollIntoView\n        selector={`#section_${sectionID}`}\n        alignToTop={true} >\n        <div className={`navItem ${id === activeId ? \"navItemActive\" : \"\"}`}> {name} </div>\n    </ScrollIntoView>\n)\nReactDOM.render(<ScrollyTeller />, document.getElementById('root'));\n"],"sourceRoot":""}